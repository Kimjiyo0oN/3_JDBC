<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<comment>stock-query.xml file</comment>
	<entry key= "stockST1">SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,NVL(재고수량,'0') 재고수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,SUM(AMOUNT) 재고수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT 
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE))
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2)</entry>
	<entry key= "stockST1_DM"> WHERE TEAM_CODE =?</entry>
	<entry key= "stockST2">SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME, NVL(SUM(AMOUNT),'0') 재고수량
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE IN_OUT_SALES_ST = ? AND SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) = ?
GROUP BY TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME</entry>
	<entry key= "stockST2_DM"> HAVING TEAM_CODE = ?</entry>
	
	<entry key= "orderST">SELECT ORDER_NO ,ORDER_CODE , PRODUCT_CODE , ORDER_AMOUNT, TO_CHAR(ORDER_DATE, 'YYYY-MM-DD') 날짜,TEAM_CODE  
FROM ORDER_TB</entry>
	<entry key= "orderST_DM"> WHERE TEAM_CODE = ?</entry>
	<entry key= "orderST1">SELECT ORDER_NO ,ORDER_CODE , PRODUCT_CODE , ORDER_AMOUNT, TO_CHAR(ORDER_DATE, 'YYYY-MM-DD') 날짜,TEAM_CODE  
FROM ORDER_TB
WHERE SUBSTR(ORDER_CODE,1,6) =?</entry>
	<entry key= "orderST1_DM"> AND TEAM_CODE = ?</entry>
	<entry key ="insertorderTB">INSERT INTO ORDER_TB VALUES(SEQ_ORDER_NO.NEXTVAL,?,TO_DATE(SYSDATE,'YYYY-MM-DD'),
?,?,?)</entry>
	<entry key= "insertorder">INSERT INTO STOCK_TB VALUES(SEQ_STOCK_NO.NEXTVAL,'IN',?,SYSDATE,'N',?,?,'DC')</entry>
	<entry key= "insertorderDC">INSERT INTO STOCK_TB VALUES(SEQ_STOCK_NO.NEXTVAL,'OUT',?,SYSDATE,'N',?,'DC',?)</entry>
	
	<!-- 재고분석 매장별 조회 -->
	<entry key= "RIAR_DM">SELECT *
FROM (SELECT m.TEAM_CODE 팀코드,m.PRODUCT_CODE 상품코드,m.PRODUCT_NAME 상품이름,m.재고수량 기초재고 ,s.기말수량 기말재고,m.판매수량 출고량,/*ROUND((m.판매수량/NULLIF( ((m.재고수량+s.기말수량)/2), 0 )),3) 재고회전율,*/
CASE 
	WHEN m.판매수량 = 0
	THEN 'Not Sales'
	WHEN (m.재고수량+s.기말수량) = 0
	THEN '0'
	ELSE RTRIM(TO_CHAR((m.판매수량/((m.재고수량+s.기말수량)/2)),'FM9990.999'),'.')  
END 재고회전율
,/*ROUND((30/NULLIF(m.판매수량/NULLIF( ((m.재고수량+s.기말수량)/2), 0 ),0)),3) 재고일수,*/
CASE 
	WHEN m.판매수량 = 0
	THEN 'Not Sales'
	WHEN (m.재고수량+s.기말수량) = 0
	THEN '0'
	ELSE RTRIM(TO_CHAR( (30/(m.판매수량/((m.재고수량+s.기말수량)/2))) ,'FM9990.999'),'.')
END 재고일수
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,재고수량,판매수량
FROM ((SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,재고수량,판매수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,NVL(SUM(AMOUNT),0) 재고수량, 0 판매수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE STOCK_ST_DATE &lt;= (?||'/01'))
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2 )
MINUS 
SELECT main.TEAM_CODE TEAM_CODE,main.PRODUCT_CODE PRODUCT_CODE,main.PRODUCT_NAME PRODUCT_NAME, main.수량 재고수량, 0 판매수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,NVL(SUM(AMOUNT),0) 수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT 
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE STOCK_ST_DATE &lt;= (?||'/01'))---main 테이블
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2) main
LEFT JOIN (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME, SUM(AMOUNT) 수량
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE IN_OUT_SALES_ST IN('SALES','OUT')  AND SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5)=?---이거 판매 수량
GROUP BY TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME) sub ON (main.TEAM_CODE = sub.TEAM_CODE)
WHERE main.PRODUCT_CODE = sub.PRODUCT_CODE
)
UNION
SELECT main.TEAM_CODE TEAM_CODE,main.PRODUCT_CODE PRODUCT_CODE,main.PRODUCT_NAME PRODUCT_NAME, main.수량 재고수량, sub.수량 판매수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,NVL(SUM(AMOUNT),0) 수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT 
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE STOCK_ST_DATE &lt;= (?||'/01')  )---main 테이블
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2) main
FULL JOIN (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME, SUM(AMOUNT) 수량
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)  ----------이거 판매슈령
WHERE IN_OUT_SALES_ST IN('SALES','OUT') AND SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5)=?
GROUP BY TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME) sub ON (main.TEAM_CODE = sub.TEAM_CODE)
WHERE main.PRODUCT_CODE = sub.PRODUCT_CODE)
--WHERE TEAM_CODE = 'DM001'
) m--ORDER BY 1)
--
JOIN 
(SELECT TEAM_CODE,PRODUCT_CODE,NVL(SUM(AMOUNT),0) 기말수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT 
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE STOCK_ST_DATE &lt;= (?||'/30')  )---main 테이블
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME) s
--ORDER BY 1,2
ON(m.TEAM_CODE =s.TEAM_CODE)
WHERE m.PRODUCT_CODE = s.PRODUCT_CODE)
WHERE 팀코드 = ?
ORDER BY 1,2</entry>
	
	<!-- 재고분석 본사 전체 매장 조회 -->
	<entry key= "RIAR">SELECT *
FROM (SELECT m.TEAM_CODE 팀코드,m.PRODUCT_CODE 상품코드,m.PRODUCT_NAME 상품이름,m.재고수량 기초재고 ,s.기말수량 기말재고,m.판매수량 출고량,/*ROUND((m.판매수량/NULLIF( ((m.재고수량+s.기말수량)/2), 0 )),3) 재고회전율,*/
CASE 
	WHEN m.판매수량 = 0
	THEN 'Not Sales'
	WHEN (m.재고수량+s.기말수량) = 0
	THEN '0'
	ELSE RTRIM(TO_CHAR((m.판매수량/((m.재고수량+s.기말수량)/2)),'FM9990.999'),'.')  
END 재고회전율
,/*ROUND((30/NULLIF(m.판매수량/NULLIF( ((m.재고수량+s.기말수량)/2), 0 ),0)),3) 재고일수,*/
CASE 
	WHEN m.판매수량 = 0
	THEN 'Not Sales'
	WHEN (m.재고수량+s.기말수량) = 0
	THEN '0'
	ELSE RTRIM(TO_CHAR( (30/(m.판매수량/((m.재고수량+s.기말수량)/2))) ,'FM9990.999'),'.')
END 재고일수
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,재고수량,판매수량
FROM ((SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,재고수량,판매수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,NVL(SUM(AMOUNT),0) 재고수량, 0 판매수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE STOCK_ST_DATE &lt;= (?||'/01'))
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2 )
MINUS 
SELECT main.TEAM_CODE TEAM_CODE,main.PRODUCT_CODE PRODUCT_CODE,main.PRODUCT_NAME PRODUCT_NAME, main.수량 재고수량, 0 판매수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,NVL(SUM(AMOUNT),0) 수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT 
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE STOCK_ST_DATE &lt;= (?||'/01'))---main 테이블
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2) main
LEFT JOIN (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME, SUM(AMOUNT) 수량
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE IN_OUT_SALES_ST IN('SALES','OUT')  AND SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5)=?---이거 판매 수량
GROUP BY TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME) sub ON (main.TEAM_CODE = sub.TEAM_CODE)
WHERE main.PRODUCT_CODE = sub.PRODUCT_CODE
)
UNION
SELECT main.TEAM_CODE TEAM_CODE,main.PRODUCT_CODE PRODUCT_CODE,main.PRODUCT_NAME PRODUCT_NAME, main.수량 재고수량, sub.수량 판매수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,NVL(SUM(AMOUNT),0) 수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT 
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE STOCK_ST_DATE &lt;= (?||'/01')  )---main 테이블
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2) main
FULL JOIN (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME, SUM(AMOUNT) 수량
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)  ----------이거 판매슈령
WHERE IN_OUT_SALES_ST IN('SALES','OUT') AND SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5)=?
GROUP BY TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME) sub ON (main.TEAM_CODE = sub.TEAM_CODE)
WHERE main.PRODUCT_CODE = sub.PRODUCT_CODE)
--WHERE TEAM_CODE = 'DM001'
) m--ORDER BY 1)
--
JOIN 
(SELECT TEAM_CODE,PRODUCT_CODE,NVL(SUM(AMOUNT),0) 기말수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT 
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE STOCK_ST_DATE &lt;= (?||'/30')  )---main 테이블
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME) s
--ORDER BY 1,2
ON(m.TEAM_CODE =s.TEAM_CODE)
WHERE m.PRODUCT_CODE = s.PRODUCT_CODE)
ORDER BY 1,2</entry>
</properties>
