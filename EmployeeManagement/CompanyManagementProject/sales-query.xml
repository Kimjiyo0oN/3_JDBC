<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<comment>sales-query.xml file</comment>
	<!-- 월별 매출 금액 -->
	<entry key = "monthSales"><![CDATA[SELECT SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5),SUM(AMOUNT)  ,TEAM_CODE ,SUM(매출)  매출
FROM (SELECT STOCK_ST_DATE, AMOUNT ,TEAM_CODE ,PRODUCT_PRICE*(1-SALES_PER)*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
JOIN SALES_TB USING(SALES_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
AND PRICE_NO= (SELECT MAX(PRICE_NO)
				FROM STOCK_TB ST2
				JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST2.PRODUCT_CODE)
				JOIN PRODUCT_PRICE_TB PPT ON (ST2.PRODUCT_CODE = PPT.PRODUCT_CODE)
				JOIN SALES_TB USING(SALES_CODE)
				WHERE IN_OUT_SALES_ST = 'SALES'
				AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
				AND ST2.STOCK_NO = ST.STOCK_NO)
UNION 
SELECT STOCK_ST_DATE, AMOUNT, TEAM_CODE  , PRODUCT_PRICE*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_NO NOT IN (SELECT DISTINCT STOCK_NO
	FROM STOCK_TB ST
	JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
	JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
	JOIN SALES_TB USING(SALES_CODE)
	WHERE IN_OUT_SALES_ST = 'SALES'
	AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE)
ORDER BY 1)
GROUP BY SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) ,TEAM_CODE]]></entry>
	<entry key ="monthSales_DM"> HAVING TEAM_CODE = ?
		ORDER BY 3,1</entry>
	<entry key ="monthSales_HQDC"> ORDER BY 3,1</entry>
	
	<!-- BEST 상품 전체 조회 -->
	<entry key = "bestSales1"><![CDATA[SELECT 상품코드, 상품이름, SUM(수량) 수량, SUM(매출) 매출
FROM (SELECT SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) 월, ST.PRODUCT_CODE 상품코드, PRODUCT_NAME 상품이름, AMOUNT 수량,TEAM_CODE 팀코드,PRODUCT_PRICE*(1-SALES_PER)*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
JOIN SALES_TB USING(SALES_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
AND PRICE_NO= (SELECT MAX(PRICE_NO)
				FROM STOCK_TB ST2
				JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST2.PRODUCT_CODE)
				JOIN PRODUCT_PRICE_TB PPT ON (ST2.PRODUCT_CODE = PPT.PRODUCT_CODE)
				JOIN SALES_TB USING(SALES_CODE)
				WHERE IN_OUT_SALES_ST = 'SALES'
				AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
				AND ST2.STOCK_NO = ST.STOCK_NO)
UNION 
SELECT SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) 월,ST.PRODUCT_CODE 상품코드,PRODUCT_NAME 상품이름, AMOUNT 수량,TEAM_CODE 팀코드, PRODUCT_PRICE*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_NO NOT IN (SELECT DISTINCT STOCK_NO
	FROM STOCK_TB ST
	JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
	JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
	JOIN SALES_TB USING(SALES_CODE)
	WHERE IN_OUT_SALES_ST = 'SALES'
	AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE)
ORDER BY 1)]]></entry>
	<entry key ="bestSales1_DM"> WHERE 팀코드 = ? GROUP BY 상품코드, 상품이름
ORDER BY 4 DESC</entry>
	<entry key ="bestSales1_HQDC"> GROUP BY 상품코드, 상품이름 ORDER BY 4 DESC</entry>
	
	<!-- BEST 상품 월별 조회 -->
	<entry key = "bestSales2"><![CDATA[SELECT 월, 상품코드, 상품이름, SUM(수량) 수량, SUM(매출) 매출
FROM (SELECT SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) 월, ST.PRODUCT_CODE 상품코드, PRODUCT_NAME 상품이름, AMOUNT 수량,TEAM_CODE 팀코드,PRODUCT_PRICE*(1-SALES_PER)*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
JOIN SALES_TB USING(SALES_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
AND PRICE_NO= (SELECT MAX(PRICE_NO)
				FROM STOCK_TB ST2
				JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST2.PRODUCT_CODE)
				JOIN PRODUCT_PRICE_TB PPT ON (ST2.PRODUCT_CODE = PPT.PRODUCT_CODE)
				JOIN SALES_TB USING(SALES_CODE)
				WHERE IN_OUT_SALES_ST = 'SALES'
				AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
				AND ST2.STOCK_NO = ST.STOCK_NO)
UNION 
SELECT SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) 월,ST.PRODUCT_CODE 상품코드,PRODUCT_NAME 상품이름, AMOUNT 수량,TEAM_CODE 팀코드, PRODUCT_PRICE*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_NO NOT IN (SELECT DISTINCT STOCK_NO
	FROM STOCK_TB ST
	JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
	JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
	JOIN SALES_TB USING(SALES_CODE)
	WHERE IN_OUT_SALES_ST = 'SALES'
	AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE)
ORDER BY 1)]]></entry>
	<entry key ="bestSales2_DM"> WHERE 팀코드 = ? GROUP BY 월 ,상품코드 , 상품이름
ORDER BY 1,5 DESC</entry>
	<entry key ="bestSales2_HQDC"> GROUP BY 월 ,상품코드 , 상품이름
ORDER BY 1,5 DESC</entry>
    <!--매출 실적  -->
	<entry key ="salesResultT">SELECT sub.월, sub.매출, stt.TARGET_AMOUNT 목표금액,ROUND((sub.매출/stt.TARGET_AMOUNT*100),1) 달성률 ,sub.팀코드
FROM (SELECT SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) 월,SUM(AMOUNT) 수량,TEAM_CODE 팀코드,SUM(매출)  매출
FROM (SELECT STOCK_ST_DATE, AMOUNT ,TEAM_CODE ,PRODUCT_PRICE*(1-SALES_PER)*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
JOIN SALES_TB USING(SALES_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
AND PRICE_NO= (SELECT MAX(PRICE_NO)
				FROM STOCK_TB ST2
				JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST2.PRODUCT_CODE)
				JOIN PRODUCT_PRICE_TB PPT ON (ST2.PRODUCT_CODE = PPT.PRODUCT_CODE)
				JOIN SALES_TB USING(SALES_CODE)
				WHERE IN_OUT_SALES_ST = 'SALES'
				AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
				AND ST2.STOCK_NO = ST.STOCK_NO)
UNION 
SELECT STOCK_ST_DATE, AMOUNT, TEAM_CODE  , PRODUCT_PRICE*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_NO NOT IN (SELECT DISTINCT STOCK_NO
	FROM STOCK_TB ST
	JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
	JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
	JOIN SALES_TB USING(SALES_CODE)
	WHERE IN_OUT_SALES_ST = 'SALES'
	AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE)
ORDER BY 1)
GROUP BY SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) ,TEAM_CODE
--HAVING TEAM_CODE = 'DM001'
ORDER BY 3,1) sub
JOIN SALES_TARGET_TB stt ON(stt.TEAM_CODE = sub.팀코드)
WHERE sub.월 = SUBSTR(TO_CHAR(stt.TARGET_DATE),1,5)</entry>
	<entry key ="salesResultT_DM"> AND sub.팀코드 = ?
ORDER BY 1</entry>
	<!-- 월마다 분류별 매출 실적 -->
	<entry key ="salesResultC">SELECT 월, 분류코드,수량, 팀코드,매출 , 
(CASE
	WHEN 분류코드 = 'SKIN_CR'
	THEN TARGET_AMOUNT*SKINCR_RATIO /*AS SKINCR목표금액*/
	WHEN 분류코드 = 'HAIR_CR'
	THEN TARGET_AMOUNT*HAIRCR_RATIO /*AS HAIRCR목표금액*/
	WHEN 분류코드 = 'MAKE_UP'
	THEN TARGET_AMOUNT*MAKEUP_RATIO /*AS MAKEUP목표금액*/
	WHEN 분류코드 = 'BODY_CR'
	THEN TARGET_AMOUNT*BODYCR_RATIO /*AS BODYCR목표금액*/
END) 목표금액,
(CASE
	WHEN 분류코드 = 'SKIN_CR'
	THEN ROUND(매출/(TARGET_AMOUNT*SKINCR_RATIO)*100,1) /*AS SKINCR목표금액*/
	WHEN 분류코드 = 'HAIR_CR'
	THEN ROUND(매출/(TARGET_AMOUNT*HAIRCR_RATIO)*100,1) /*AS HAIRCR목표금액*/
	WHEN 분류코드 = 'MAKE_UP'
	THEN ROUND(매출/(TARGET_AMOUNT*MAKEUP_RATIO)*100,1) /*AS MAKEUP목표금액*/
	WHEN 분류코드 = 'BODY_CR'
	THEN ROUND(매출/(TARGET_AMOUNT*BODYCR_RATIO)*100,1) /*AS BODYCR목표금액*/
END) 달성률
FROM 
(SELECT 월, 분류코드, SUM(수량) 수량, 팀코드, SUM(매출) 매출
FROM (SELECT SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) 월, CATEGORY_CODE 분류코드, AMOUNT 수량,TEAM_CODE 팀코드,PRODUCT_PRICE*(1-SALES_PER)*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
JOIN SALES_TB USING(SALES_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
AND PRICE_NO= (SELECT MAX(PRICE_NO)
				FROM STOCK_TB ST2
				JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST2.PRODUCT_CODE)
				JOIN PRODUCT_PRICE_TB PPT ON (ST2.PRODUCT_CODE = PPT.PRODUCT_CODE)
				JOIN SALES_TB USING(SALES_CODE)
				WHERE IN_OUT_SALES_ST = 'SALES'
				AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE
				AND ST2.STOCK_NO = ST.STOCK_NO)
UNION 
SELECT SUBSTR(TO_CHAR(STOCK_ST_DATE),1,5) 월,CATEGORY_CODE 분류코드, AMOUNT 수량,TEAM_CODE 팀코드, PRODUCT_PRICE*AMOUNT 매출
FROM STOCK_TB ST
JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
AND STOCK_NO NOT IN (SELECT DISTINCT STOCK_NO
	FROM STOCK_TB ST
	JOIN PRODUCT_TB MAIN ON (MAIN.PRODUCT_CODE = ST.PRODUCT_CODE)
	JOIN PRODUCT_PRICE_TB PPT ON (ST.PRODUCT_CODE = PPT.PRODUCT_CODE)
	JOIN SALES_TB USING(SALES_CODE)
	WHERE IN_OUT_SALES_ST = 'SALES'
	AND STOCK_ST_DATE BETWEEN START_DATE AND END_DATE)
ORDER BY 1)
GROUP BY 월 ,분류코드, 팀코드
ORDER BY 1 ,4,5 DESC) sub
JOIN SALES_TARGET_TB stt ON(stt.TEAM_CODE = sub.팀코드)
WHERE sub.월 = SUBSTR(TO_CHAR(stt.TARGET_DATE),1,5)</entry>
	<entry key ="salesResultC_DM"> AND sub.팀코드 = ?
ORDER BY 1</entry>
	<entry key ="productSales">SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,재고수량,판매수량
FROM ((SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,재고수량,판매수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,SUM(AMOUNT) 재고수량, 0 판매수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE))
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2 )
MINUS 
SELECT main.TEAM_CODE TEAM_CODE,main.PRODUCT_CODE PRODUCT_CODE,main.PRODUCT_NAME PRODUCT_NAME, main.수량 재고수량, 0 판매수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,SUM(AMOUNT) 수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT 
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE))---main 테이블
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2) main
LEFT JOIN (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME, SUM(AMOUNT) 수량
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
GROUP BY TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME) sub ON (main.TEAM_CODE = sub.TEAM_CODE)
WHERE main.PRODUCT_CODE = sub.PRODUCT_CODE
)
UNION
SELECT main.TEAM_CODE TEAM_CODE,main.PRODUCT_CODE PRODUCT_CODE,main.PRODUCT_NAME PRODUCT_NAME, main.수량 재고수량, sub.수량 판매수량
FROM (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME,SUM(AMOUNT) 수량
FROM(SELECT TEAM_CODE ,PRODUCT_CODE ,PRODUCT_TB.PRODUCT_NAME PRODUCT_NAME,
(CASE 
	WHEN IN_OUT_SALES_ST = 'IN'
	THEN TO_NUMBER(TO_CHAR(AMOUNT))   
	WHEN IN_OUT_SALES_ST = 'OUT'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
	WHEN IN_OUT_SALES_ST = 'SALES'
	THEN TO_NUMBER(TO_CHAR('-'||AMOUNT))
END) AMOUNT 
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE))---main 테이블
GROUP BY TEAM_CODE ,PRODUCT_CODE ,PRODUCT_NAME
ORDER BY 1,2) main
LEFT JOIN (SELECT TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME, SUM(AMOUNT) 수량
FROM STOCK_TB
FULL JOIN PRODUCT_TB USING(PRODUCT_CODE)
WHERE IN_OUT_SALES_ST = 'SALES'
GROUP BY TEAM_CODE,PRODUCT_CODE,PRODUCT_NAME) sub ON (main.TEAM_CODE = sub.TEAM_CODE)
WHERE main.PRODUCT_CODE = sub.PRODUCT_CODE)</entry>
	<entry key ="productSalesY"> WHERE PRODUCT_NAME = ?
ORDER BY 2</entry>
	<entry key ="productSalesN"> ORDER BY 2</entry>
</properties>
